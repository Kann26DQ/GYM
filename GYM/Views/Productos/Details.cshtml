@model GYM.Models.Producto

@{
    Layout = "_Layout";
    ViewData["Title"] = "Detalles del Producto";
}

<h2 class="my-4">@Model.Nombre</h2>

<div class="row">
    <div class="col-md-6">
        <div class="card mb-3">
            <div class="card-body">
                <h5 class="card-title">@Model.Nombre</h5>
                <p class="card-text">@Model.Descripcion</p>
                <p><strong>Precio:</strong> S/ @Model.Precio.ToString("0.00")</p>
                <p><strong>En venta:</strong> @Model.StockVenta</p>

                <div class="mt-3">
                    <form asp-controller="Cart" asp-action="AddToCart" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="productoId" value="@Model.ProductoId" />
                        <div class="input-group mb-2" style="max-width:260px;">
                            <input id="qty-input" name="cantidad" type="number" value="1" min="1" max="@Model.StockVenta" class="form-control" />
                            <button id="btn-add" type="submit" class="btn btn-primary">Añadir al carrito</button>
                        </div>
                        <small id="limit-msg" class="text-danger d-none">¡Límite alcanzado!</small>
                    </form>

                    <a asp-controller="Cart" asp-action="Productos" class="btn btn-secondary">Volver a la tienda</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (async function () {
            try {
                const res = await fetch('/Cart/CartMap', { credentials: 'same-origin' });
                if (!res.ok) return;
                const map = await res.json();

                const pid = @Model.ProductoId;
                const cupo = @Model.StockVenta;
                const yaEnCarrito = map[pid] || 0;
                const restante = Math.max(0, cupo - yaEnCarrito);

                const qtyInput = document.getElementById('qty-input');
                const btnAdd = document.getElementById('btn-add');
                const limitMsg = document.getElementById('limit-msg');

                qtyInput.max = restante;
                if (restante === 0) {
                    qtyInput.value = 0;
                    qtyInput.disabled = true;
                    btnAdd.disabled = true;
                    limitMsg.classList.remove('d-none');
                } else {
                    if (parseInt(qtyInput.value, 10) > restante) qtyInput.value = restante;
                    limitMsg.classList.add('d-none');
                }
            } catch (e) {
                console.warn('No se pudo ajustar el límite por carrito', e);
            }
        })();
    </script>
}